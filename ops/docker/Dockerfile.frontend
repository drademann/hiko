# Build stage
FROM node:24-alpine AS builder
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./
RUN npm ci

# Copy Nx configuration
COPY nx.json ./
COPY tsconfig.base.json ./

# Copy only the necessary source code
COPY apps/frontend ./apps/frontend
COPY libs/frontend ./libs/frontend
COPY libs/shared ./libs/shared

# Build the frontend application for production
RUN npx nx run frontend:build:production

# Runtime stage - using nginx for serving static files
FROM nginx:alpine
WORKDIR /usr/share/nginx/html

# Remove default nginx website and config
RUN rm -rf ./*
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration with API proxy
COPY ops/docker/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built Angular app from builder stage
COPY --from=builder /app/dist/apps/frontend/browser .

# Expose port 80 for web traffic
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]